@model PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.Card

@{
    ViewData["Title"] = "Delete Card";
}

<!-- TODO: STUDENT TASK 1 - Warning Header
     Instructions:
     1. Create a prominent warning header indicating this is a delete operation
     2. Use danger colors (red) to indicate the destructive nature
     3. Add breadcrumb navigation
     4. Include warning icons and clear messaging
-->
<div class="container-fluid bg-danger text-white py-3 mb-4">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-transparent mb-2">
                <li class="breadcrumb-item"><a href="#" asp-action="Index" class="text-light">Card Collection</a></li>
                <li class="breadcrumb-item"><a href="#" asp-action="Details" asp-route-id="@Model.Id" class="text-light">@Model.Name</a></li>
                <li class="breadcrumb-item active text-light" aria-current="page">Delete</li>
            </ol>
        </nav>
        <h1 class="display-5">⚠️ Delete Greed Island Card</h1>
        <p class="lead">You are about to permanently delete "@Model.Name"</p>
    </div>
</div>

<div class="container">
    <!-- TODO: STUDENT TASK 2 - Confirmation Warning
         Instructions:
         1. Create a prominent warning box explaining what will happen
         2. Use Bootstrap alert components with danger styling
         3. Include clear messaging about permanence of deletion
         4. Add warning icons for visual emphasis
    -->
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading"><i class="fas fa-exclamation-triangle"></i> Warning!</h4>
        <p>You are about to permanently delete this card. This action cannot be undone.</p>
        <hr>
        <p class="mb-0">Please review the card details below and confirm your decision.</p>
    </div>

    <div class="row">
        <!-- TODO: STUDENT TASK 3 - Card Preview for Deletion
             Instructions:
             1. Display the full card information that will be deleted
             2. Make it visually prominent so users know exactly what they're deleting
             3. Include all key details (image, name, character, etc.)
             4. Style it similarly to the Details view but with warning colors
        -->
        <div class="col-md-6 mb-4">
            <div class="card border-danger">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0"><i class="fas fa-trash"></i> Card to be Deleted</h4>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.CharacterImageUrl))
                    {
                        <img src="@Model.CharacterImageUrl" alt="@Model.CharacterName" 
                             class="img-fluid rounded mb-3" style="max-height: 300px; width: 100%; object-fit: cover;">
                    }
                    else
                    {
                        <div class="bg-light d-flex align-items-center justify-content-center rounded mb-3" 
                             style="height: 300px;">
                            <div class="text-center text-muted">
                                <i class="fas fa-image fa-4x mb-2"></i>
                                <p>No Image</p>
                            </div>
                        </div>
                    }
                    
                    <h3 class="text-danger">@Html.DisplayFor(model => model.Name)</h3>
                    <h5 class="text-muted">@Html.DisplayFor(model => model.CharacterName)</h5>
                </div>
            </div>
        </div>
        
        <!-- TODO: STUDENT TASK 4 - Detailed Information Panel
             Instructions:
             1. Show all card properties in a organized table or list
             2. Use Bootstrap table or definition list styling
             3. Make it easy to review all information
             4. Include rarity badges and other visual elements
        -->
        <div class="col-md-6">
            <div class="card border-warning">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0"><i class="fas fa-info-circle"></i> Card Details</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Card Name:</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.Name)</dd>
                        
                        <dt class="col-sm-4">Character:</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.CharacterName)</dd>
                        
                        <dt class="col-sm-4">Rarity:</dt>
                        <dd class="col-sm-8">
                            <span class="badge badge-@(GetRarityBadgeClass(Model.Rarity))">
                                @Html.DisplayFor(model => model.Rarity)
                            </span>
                        </dd>
                        
                        <dt class="col-sm-4">Card Type:</dt>
                        <dd class="col-sm-8">
                            <span class="badge badge-primary">@Html.DisplayFor(model => model.CardType)</span>
                        </dd>
                        
                        <dt class="col-sm-4">Card Number:</dt>
                        <dd class="col-sm-8">#@Html.DisplayFor(model => model.CardNumber)</dd>
                        
                        <dt class="col-sm-4">Power Level:</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => model.PowerLevel)/10</dd>
                        
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <dt class="col-sm-4">Description:</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.Description)</dd>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.SpecialAbility))
                        {
                            <dt class="col-sm-4">Special Ability:</dt>
                            <dd class="col-sm-8">@Html.DisplayFor(model => model.SpecialAbility)</dd>
                        }
                        
                        <dt class="col-sm-4">Created:</dt>
                        <dd class="col-sm-8">@Model.DateCreated.ToString("MMMM dd, yyyy")</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- TODO: STUDENT TASK 5 - Final Confirmation Section
         Instructions:
         1. Create a final confirmation section with clear messaging
         2. Include another warning about the permanent nature of deletion
         3. Style it with appropriate danger colors
         4. Make it stand out from the rest of the page
    -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-danger">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0"><i class="fas fa-exclamation-triangle"></i> Final Confirmation</h5>
                </div>
                <div class="card-body">
                    <p class="text-danger font-weight-bold">
                        Are you sure you want to delete the card "@Model.Name"?
                    </p>
                    <p class="text-muted">
                        This action will permanently remove the card from your collection and cannot be undone.
                    </p>
                    
                    <!-- TODO: STUDENT TASK 6 - Delete Form and Action Buttons
                         Instructions:
                         1. Create the delete form with proper POST method
                         2. Add hidden field for the card ID
                         3. Create prominent Delete and Cancel buttons
                         4. Style Delete button with danger colors
                         5. Add confirmation JavaScript or additional warnings
                         6. Include navigation options (Back to List, Back to Details)
                    -->
                    <form asp-action="Delete" method="post" class="d-inline">
                        <input type="hidden" asp-for="Id" />
                        
                        <div class="btn-toolbar justify-content-between">
                            <div class="btn-group">
                                <a asp-action="Index" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Back to Collection
                                </a>
                                <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info">
                                    <i class="fas fa-eye"></i> View Details
                                </a>
                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                                    <i class="fas fa-edit"></i> Edit Instead
                                </a>
                            </div>
                            
                            <div class="btn-group">
                                <button type="submit" class="btn btn-danger btn-lg" 
                                        onclick="return confirm('Are you absolutely sure you want to delete this card? This action cannot be undone!');">
                                    <i class="fas fa-trash"></i> Delete Card Permanently
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- TODO: STUDENT TASK 7 - Alternative Actions Section
         Instructions:
         1. Suggest alternative actions instead of deletion
         2. Include links to edit the card or view other cards
         3. Style as a helpful suggestion box
         4. Use info or light colors to contrast with the danger theme
    -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="alert alert-info" role="alert">
                <h6><i class="fas fa-lightbulb"></i> Consider These Alternatives:</h6>
                <ul class="mb-0">
                    <li><a asp-action="Edit" asp-route-id="@Model.Id">Edit the card</a> to fix any issues instead of deleting</li>
                    <li><a asp-action="Index">Browse your collection</a> to see all your cards</li>
                    <li><a asp-action="Create">Create a new card</a> to expand your collection</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@functions {
    // TODO: STUDENT TASK 8 - Helper Function for Rarity Styling
    // Instructions: Implement consistent rarity badge styling across all views
    public string GetRarityBadgeClass(PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.CardRarity rarity)
    {
        return rarity switch
        {
            PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.CardRarity.Common => "secondary",
            PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.CardRarity.Uncommon => "primary",
            PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.CardRarity.Rare => "info",
            PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.CardRarity.SuperRare => "warning",
            PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.CardRarity.UltraRare => "danger",
            PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.CardRarity.Legendary => "dark",
            _ => "light"
        };
    }
}
