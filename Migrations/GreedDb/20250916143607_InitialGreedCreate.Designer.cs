// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Data;

#nullable disable

namespace PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Migrations.GreedDb
{
    [DbContext(typeof(GreedDbContext))]
    [Migration("20250916143607_InitialGreedCreate")]
    partial class InitialGreedCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PF_LAB3_BSIT31A1_JohnAndrei_Guillena.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<string>("CharacterImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PowerLevel")
                        .HasColumnType("int");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<string>("SpecialAbility")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CardType");

                    b.HasIndex("Name");

                    b.HasIndex("Rarity");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardNumber = 1,
                            CardType = 1,
                            CharacterName = "Gon Freecss",
                            DateCreated = new DateTime(2025, 9, 16, 22, 36, 5, 684, DateTimeKind.Local).AddTicks(9637),
                            Description = "A simple rock throw attack",
                            Name = "Gon's Rock",
                            PowerLevel = 3,
                            Rarity = 1,
                            SpecialAbility = "Can break through basic defenses"
                        },
                        new
                        {
                            Id = 2,
                            CardNumber = 2,
                            CardType = 3,
                            CharacterName = "Killua Zoldyck",
                            DateCreated = new DateTime(2025, 9, 16, 22, 36, 5, 684, DateTimeKind.Local).AddTicks(9642),
                            Description = "Electricity-based attack",
                            Name = "Killua's Lightning",
                            PowerLevel = 7,
                            Rarity = 3,
                            SpecialAbility = "Paralyzes opponent for one turn"
                        },
                        new
                        {
                            Id = 3,
                            CardNumber = 3,
                            CardType = 3,
                            CharacterName = "Kurapika",
                            DateCreated = new DateTime(2025, 9, 16, 22, 36, 5, 684, DateTimeKind.Local).AddTicks(9646),
                            Description = "Judgment chain ability",
                            Name = "Kurapika's Chain",
                            PowerLevel = 8,
                            Rarity = 4,
                            SpecialAbility = "Can bind and restrict enemy movement"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
